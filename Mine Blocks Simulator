repeat
	wait()
until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character
local L_1_ = game:GetService("ReplicatedStorage")
local L_2_ = game:GetService("Players").LocalPlayer
local function L_3_func()
	local L_42_ = "https://tryhardguides.com/punch-wall-simulator-codes/"
	local L_43_ = game:HttpGet(L_42_);
	local L_44_ = {};
	for L_45_forvar0 in string.gmatch(L_43_, "<ul>(.-)</ul>") do
		for L_46_forvar0 in string.gmatch(L_45_forvar0, "<li>(.-)</li>") do
			for L_47_forvar0 in string.gmatch(L_46_forvar0, "<strong>([^<]+)</strong>") do
				table.insert(L_44_, L_47_forvar0);
			end
		end
	end
	for L_48_forvar0, L_49_forvar1 in next, L_44_ do
		L_1_["functions-shared/network@GlobalFunctions"]["s:redeemCode"]:FireServer(0, L_49_forvar1)
	end
end
local L_4_, L_5_, L_6_ = loadstring(game:HttpGet("https://raw.githubusercontent.com/13B8B/ARCHIVE/main/Load.lua"))()
local L_7_ = L_6_()
local L_8_ = L_5_:CreateWindow({
	Name = "NEXUS : Mine Blocks Simulator",
	LoadingTitle = "Nexus Central",
	LoadingSubtitle = "Mine Blocks Simulator",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "NEXUS-CONFIG",
		FileName = game.PlaceId
	},
	Discord = {
		Enabled = false,
		Invite = "XwGRxHgVPm",
		RememberJoins = false
	}
})
game:GetService("CoreGui").PurchasePrompt.Enabled = false
local L_9_ = L_8_:CreateTab("Main", 13054639921)
L_9_:CreateSection("Auto Farm")
L_9_:CreateToggle({
	Name = "Auto Stength",
	CurrentValue = false,
	Flag = "AutoStrength",
	Callback = function(L_50_arg0)
	end,
})
local function L_10_func()
	local L_51_ = game:GetService("Players").LocalPlayer
	local L_52_ = L_51_.Character.HumanoidRootPart.CFrame
	local L_53_ = game:GetService("Players").LocalPlayer.Rebirth.Value
	local L_54_ = L_51_.leaderstats.Wins.Value
	L_54_ = string.gsub(L_54_, ",", "") -- remove commas
	if string.sub(L_54_, -1) == "M" then -- check if the string ends with "M"
		L_54_ = tonumber(string.sub(L_54_, 1, -2)) * 1000000 -- convert to number and multiply by 1,000,000
	else
		L_54_ = tonumber(L_54_) -- convert to number
	end
	local L_55_, L_56_ = pcall(function()
		if tonumber(L_53_) < 3 then
			game:GetService("ReplicatedStorage").Events.Box:FireServer(workspace.Box["8"].Model)
		elseif tonumber(L_53_) < 10 then
			game:GetService("ReplicatedStorage").Events.Box:FireServer(workspace.Box["9"].Model)
		else
			game:GetService("ReplicatedStorage").Events.Box:FireServer(workspace.Box["10"].Model)
		end
	end)
	if not L_55_ then
		warn(L_56_)
	end
end
local L_11_ = game:GetService("RunService")
L_11_.Stepped:Connect(function(L_57_arg0)
	if L_5_.Flags.AutoStrength.CurrentValue then
		for L_58_forvar0 = 1, 3 do
			L_10_func()
		end
	end
end)
L_9_:CreateToggle({
	Name = "Auto Wins",
	CurrentValue = false,
	Flag = "AutoRank",
	Callback = function(L_59_arg0)
	end,
})
local function L_12_func()
	local L_60_ = game:GetService("Players").LocalPlayer
	local L_61_ = L_60_.Character.HumanoidRootPart.CFrame
	local L_62_ = game:GetService("Players").LocalPlayer.Rebirth.Value
	local L_63_ = L_60_.leaderstats.Wins.Value
	L_63_ = string.gsub(L_63_, ",", "") -- remove commas
	if string.sub(L_63_, -1) == "M" then -- check if the string ends with "M"
		L_63_ = tonumber(string.sub(L_63_, 1, -2)) * 1000000 -- convert to number and multiply by 1,000,000
	else
		L_63_ = tonumber(L_63_) -- convert to number
	end
	local L_64_, L_65_ = pcall(function()
		if tonumber(L_62_) < 3 then
			print("ASS")
			L_60_.Character.HumanoidRootPart.CFrame = CFrame.new(-68, -90, 425)
		elseif tonumber(L_62_) < 10 then
			L_60_.Character.HumanoidRootPart.CFrame = CFrame.new(-69, -90, 538)
		else
			L_60_.Character.HumanoidRootPart.CFrame = CFrame.new(-67, -90, 647)
		end
	end)
	if not L_64_ then
		warn(L_65_)
	end
	wait(3)
end
task.spawn(function()
	while wait() do
		if L_5_.Flags.AutoRank.CurrentValue then
			L_12_func()
		end
	end 
end)
L_9_:CreateSection("Other")
L_9_:CreateToggle({
	Name = "Auto Spin Wheel",
	CurrentValue = false,
	Flag = "AutoWheel",
	Callback = function(L_66_arg0)
	end,  
})
task.spawn(function()
	while wait(1) do
		if L_5_.Flags.AutoWheel.CurrentValue then
			game:GetService("ReplicatedStorage").Wheel:FireServer()
		end
	end 
end)  
L_9_:CreateToggle({
	Name = "Auto Rebirth",
	CurrentValue = false,
	Flag = "AutoRebirth",
	Callback = function(L_67_arg0)
	end,
})
task.spawn(function()
	while task.wait(1) do
		if L_5_.Flags.AutoRebirth.CurrentValue then
			game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(true)
		end
	end 
end)  
L_9_:CreateSection("Auto Hatch")
_G.selectedPet = nil

local L_13_ = {
	["Zone 1"] = {
		capsuleName = "Zone 1",
		price = 5
	},
	["Zone 2"] = {
		capsuleName = "Zone 2",
		price = 30
	},
	["Zone 3"] = {
		capsuleName = "Zone 3",
		price = 150
	},
	["Zone 4"] = {
		capsuleName = "Zone 4",
		price = 250
	},
	["Zone 5"] = {
		capsuleName = "Zone 5",
		price = 500
	},
	["Zone 6"] = {
		capsuleName = "Zone 6",
		price = 1000
	},
	["Zone 7"] = {
		capsuleName = "Zone 7",
		price = 3000
	},
	["Zone 8"] = {
		capsuleName = "Zone 8",
		price = 5000
	},
	["Zone 9"] = {
		capsuleName = "Zone 9",
		price = 8000
	},
	["Zone 10"] = {
		capsuleName = "Zone 10",
		price = 14000
	},
}

L_9_:CreateDropdown({
	Name = "Selected Pet",
	Options = {
		"Zone 1 (5 Wins)",
		"Zone 2 (30 Wins)",
		"Zone 3 (150 Wins)",
		"Zone 4 (250 Wins)",
		"Zone 5 (500 Wins)",
		"Zone 6 (1K Wins)",
		"Zone 7 (3K Wins)",
		"Zone 8 (5K Wins)",
		"Zone 9 (8K Wins)",
		"Zone 10 (14K Wins)"
	},
	CurrentOption = "...",
	Callback = function(L_68_arg0)
		local L_69_ = L_13_[string.match(L_68_arg0, "(.-) %(")]
		if L_69_ then
			_G.selectedPet = L_69_.capsuleName
			local L_70_ = L_69_.price
			if L_70_ >= 1000 then
				L_70_ = string.format("%.1fK", L_70_ / 1000)
			end
			print("You have selected the " .. L_69_.capsuleName .. " pet for " .. L_70_ .. " coins.")
		end
	end
})
_G.selectedPet = "Zone 1"  

L_9_:CreateToggle({
	Name = "Auto Hatch",
	CurrentValue = false,
	Flag = "AutoHatch",
	Callback = function(L_71_arg0)
		_G.autoHatch = L_71_arg0
		autoHatch()
	end
})
function autoHatch()
	_G.selectedPet = _G.selectedPet or "Zone 1"
	while _G.autoHatch do
		wait()
		if _G.selectedPet then  -- make sure selected pet is not nil
			game.ReplicatedStorage.Events.OpenPet:FireServer(workspace.Pet:FindFirstChild(_G.selectedPet), false)
		end
	end
end
local L_14_ = L_8_:CreateTab("Misc", 12558214594)
L_14_:CreateSection("Misc")
L_14_:CreateToggle({
	Name = "Auto Equip Best Pets",
	CurrentValue = false,
	Flag = "EquipBest",
	Callback = function(L_72_arg0)
	end,
})
task.spawn(function()
	while wait(5) do
		if L_5_.Flags.EquipBest.CurrentValue then
			local L_73_ = "EquipBest"
			game:GetService("ReplicatedStorage").PetSystem.SystemEquipButon:FireServer(L_73_)
		end
	end 
end)  

L_14_:CreateButton({
	Name = "Redeem Codes",
	Callback = function()
       -- RedeemCodes() STILL NO CODE SYSTEM
	end,
})
local L_15_ = L_8_:CreateTab("User", 12559105272)
L_15_:CreateSection("Player Config")
local L_16_ = game:GetService"UserInputService"
local L_17_ = game:GetService("UserInputService")
local L_18_ = game:GetService("RunService")
local L_19_ = game.Players.LocalPlayer
local L_20_ = L_19_.Character or L_19_.CharacterAdded:Wait()
local L_21_ = L_20_:WaitForChild("Humanoid")
local L_22_ = false
local L_23_ = false
local function L_24_func()
	if L_22_ and L_23_ then
		L_21_.Jump = true
	end
end
L_17_.InputBegan:Connect(function(L_74_arg0, L_75_arg1)
	if not L_75_arg1 and L_74_arg0.KeyCode == Enum.KeyCode.Space then
		L_22_ = true
		L_24_func()
	end
end)
L_17_.InputEnded:Connect(function(L_76_arg0, L_77_arg1)
	if not L_77_arg1 and L_76_arg0.KeyCode == Enum.KeyCode.Space then
		L_22_ = false
	end
end)
L_18_.Heartbeat:Connect(function()
	if L_22_ and L_23_ then
		L_21_:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)
L_15_:CreateToggle({
	Name = "Infinite-Jump",
	CurrentValue = L_23_,
	Flag = "InfiJump",
	Callback = function(L_78_arg0)
		L_23_ = L_78_arg0;
	end
})
local L_25_ = false
local L_26_ = L_15_:CreateToggle({
	Name = "Basic Player Speed",
	CurrentValue = false,
	Flag = "",
	Callback = function(L_79_arg0)
		L_25_ = L_79_arg0
	end
})
local L_27_ = game:GetService("Players").LocalPlayer
if getgenv().noclip and L_27_.Character:FindFirstChild("Humanoid") then
	L_27_.Character.Humanoid:ChangeState(11)
end  
local L_28_ = false
local function L_29_func(L_80_arg0)
	if L_80_arg0.UserInputType == Enum.UserInputType.Keyboard and L_80_arg0.KeyCode == Enum.KeyCode.W then
		L_28_ = true
	end
end
local function L_30_func(L_81_arg0)
	if L_81_arg0.UserInputType == Enum.UserInputType.Keyboard and L_81_arg0.KeyCode == Enum.KeyCode.W then
		L_28_ = false
	end  
end
task.spawn(function()
	while wait(0.005) do
		if L_25_ and L_28_ and L_27_.Character and L_27_.Character.HumanoidRootPart then
			L_27_.Character.HumanoidRootPart.CFrame = L_27_.Character.HumanoidRootPart.CFrame + L_27_.Character.HumanoidRootPart.CFrame.lookVector * 0.50
			L_27_.Character.HumanoidRootPart.CFrame = L_27_.Character.HumanoidRootPart.CFrame + L_27_.Character.HumanoidRootPart.CFrame.lookVector * 0.50
			L_27_.Character.HumanoidRootPart.CFrame = L_27_.Character.HumanoidRootPart.CFrame + L_27_.Character.HumanoidRootPart.CFrame.lookVector * 0.50
		end
	end
end)
local L_31_, L_32_, L_33_, L_34_ = game.GetService, game.FindFirstChild, game.Loaded.Connect, game.GetChildren;
local L_35_ = L_31_(game, "Players")
local L_36_ = game:GetService("UserInputService")
L_36_.InputBegan:Connect(L_29_func)
L_36_.InputEnded:Connect(L_30_func)
L_15_:CreateSection("WalkSpeed / Gravity")
local L_37_ = false 
local function L_38_func(L_82_arg0)
	for L_83_forvar0, L_84_forvar1 in ipairs(L_35_:GetPlayers()) do
		local L_85_ = L_84_forvar1.Character and L_84_forvar1.Character:FindFirstChild("Humanoid")
		if L_85_ then
			L_85_.WalkSpeed = L_82_arg0
		end
	end
end  
L_15_:CreateToggle({
	Name = "Walkspeed",
	CurrentValue = false,
	Flag = "WalkSpeed",
	Callback = function(L_86_arg0)
		L_37_ = L_86_arg0
		repeat
			task.wait()
			L_38_func(L_37_ and val or 50)
		until L_37_ == false
	end,
})
L_15_:CreateSlider({
	Name = "Walk Speed",
	Range = {
		16,
		100
	},
	Increment = 1,
	Suffix = "Delayy",
	CurrentValue = 16,
	Callback = function(L_87_arg0)
		val = L_87_arg0
	end,
})
L_15_:CreateToggle({
	Name = "Gravity",
	CurrentValue = false,
	Flag = "Gravityy",
	Callback = function(L_88_arg0)
		if L_88_arg0 then
			repeat
				task.wait()
				game:GetService("Workspace").Gravity = (gravity or 45)
			until L_5_.Flags.Gravityy.CurrentValue == false
		else
			game:GetService("Workspace").Gravity = 58
		end
	end,
})
L_15_:CreateSlider({
	Name = "Gravity",
	Range = {
		0,
		60
	},
	Increment = 1,
	Suffix = "Delayy",
	CurrentValue = 16,
	Callback = function(L_89_arg0)
		gravity = L_89_arg0
	end,
})
local L_39_ = L_8_:CreateTab("Universe", 12558305562)
local L_40_ = L_39_:CreateSection("Universe")
L_39_:CreateToggle({
	Name = "Auto Rejoin",
	CurrentValue = false,
	Flag = "Universal-AutoRejoin",
	Callback = function(L_90_arg0)
		if L_90_arg0 then
			L_5_:Notify({
				Title = "Notification",
				Content = "You will auto rejoin if you are kicked or disconnected from the game",
				Duration = 5,
				Image = 3944670656,
			})
			repeat
				task.wait()
			until game.CoreGui:FindFirstChild('RobloxPromptGui')
			local L_91_, L_92_, L_93_ = game:GetService('Players').LocalPlayer, game.CoreGui.RobloxPromptGui.promptOverlay, game:GetService('TeleportService')
			L_92_.ChildAdded:connect(function(L_94_arg0)
				if L_94_arg0.Name == 'ErrorPrompt' then
					while true do
						L_93_:Teleport(game.PlaceId)
						task.wait(2)
					end
				end
			end)
		end
	end,
})
L_39_:CreateToggle({
	Name = "Auto ReExecute",
	CurrentValue = false,
	Flag = "Universal-AutoRe-Execute",
	Callback = function(L_95_arg0)
		if L_95_arg0 then
			local L_96_ = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
			if L_96_ then
				L_96_('loadstring(game:HttpGet("https://raw.githubusercontent.com/13B8B/NEXUS/main/loadstring"))()')
			end
		end
	end,
})
L_39_:CreateButton({
	Name = "Rejoin-Server",
	Callback = function()
		game:GetService("TeleportService"):Teleport(game.PlaceId, L_19_)
	end,
})
L_39_:CreateButton({
	Name = "Server-Hop",
	Callback = function()
		local L_97_ = game:GetService("HttpService")
		local L_98_ = game:GetService("TeleportService")
		local L_99_ = "https://games.roblox.com/v1/games/"
		local L_100_, L_101_ = game.PlaceId, game.JobId
		local L_102_ = L_99_ .. L_100_ .. "/servers/Public?sortOrder=Desc&limit=100"
		local function L_103_func(L_105_arg0)
			local L_106_ = game:HttpGet(L_102_ .. ((L_105_arg0 and "&cursor=" .. L_105_arg0) or ""))
			return L_97_:JSONDecode(L_106_)
		end
		local L_104_;
		repeat
			local L_107_ = L_103_func(L_104_)
			for L_108_forvar0, L_109_forvar1 in next, L_107_.data do
				if L_109_forvar1.playing < L_109_forvar1.maxPlayers and L_109_forvar1.id ~= L_101_ then
					local L_110_, L_111_ = pcall(L_98_.TeleportToPlaceInstance, L_98_, L_100_, L_109_forvar1.id, L_19_)
					if L_110_ then
						break
					end
				end
			end
			L_104_ = L_107_.nextPageCursor
		until not L_104_
	end,
})
L_39_:CreateSection("Detector")
local L_41_ = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Creator.CreatorTargetId
L_39_:CreateToggle({
	Name = "Moderator Detector",
	CurrentValue = false,
	Flag = "Universal-AutoLeave",
	Callback = function(L_112_arg0)
		if L_112_arg0 then
			for L_113_forvar0, L_114_forvar1 in pairs(game.Players:GetPlayers()) do
				pcall(function()
					if L_114_forvar1:IsInGroup(L_41_) and L_114_forvar1:GetRankInGroup(L_41_) > 1 then
						AutoRejoin:Set(false)
						L_19_:Kick("Detected Staff")
					end
				end)
			end
		end
	end,
})
game:GetService("Players").PlayerAdded:Connect(function(L_115_arg0)
	if L_5_.Flags["Universal-AutoLeave"].CurrentValue then
		pcall(function()
			if L_115_arg0:IsInGroup(L_41_) and L_115_arg0:GetRankInGroup(L_41_) > 1 then
				AutoRejoin:Set(false)
				L_19_:Kick("Detected Staff")
			end
		end)
	end  
end)
task.spawn(function()
	while wait(1) do
		game:GetService("Players").LocalPlayer.PlayerGui.Notifications.Enabled = false
	end
end)
L_5_:LoadConfiguration()

repeat
	wait()
until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character
local L_1_ = game:GetService("Players")
local L_2_ = L_1_.LocalPlayer
  
local function L_3_func()
	local L_33_ = "https://tryhardguides.com/block-mine/"
	local L_34_ = game:HttpGet(L_33_);
	local L_35_ = {};
	for L_36_forvar0 in string.gmatch(L_34_, "<ul>(.-)</ul>") do
		for L_37_forvar0 in string.gmatch(L_36_forvar0, "<li>(.-)</li>") do
			for L_38_forvar0 in string.gmatch(L_37_forvar0, "<strong>([^<]+)</strong>") do
				table.insert(L_35_, L_38_forvar0);
			end
		end
	end
	for L_39_forvar0, L_40_forvar1 in next, L_35_ do
		game:GetService("ReplicatedStorage").Remotes.CodeRequest:InvokeServer(L_40_forvar1)
	end
end
local function L_4_func(L_41_arg0, L_42_arg1)
	local L_43_ = L_2_.Character.HumanoidRootPart
	local L_44_ = TweenInfo.new(L_42_arg1, Enum.EasingStyle.Quad)
	local L_45_ = game:GetService("TweenService"):Create(L_43_, L_44_, {
		CFrame = CFrame.new(L_41_arg0)
	})
	L_45_:Play()
	wait(L_42_arg1)
end

local L_5_, L_6_, L_7_ = loadstring(game:HttpGet("https://raw.githubusercontent.com/13B8B/ARCHIVE/main/Load.lua"))()
local L_8_ = L_7_()
local L_9_ = L_6_:CreateWindow({
	Name = "NEXUS : Block Mine",
	LoadingTitle = "Nexus Central",
	LoadingSubtitle = "Block Mine",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "NEXUS-CONFIG",
		FileName = game.PlaceId
	},
	Discord = {
		Enabled = false,
		Invite = "XwGRxHgVPm",
		RememberJoins = false
	}
})

local L_10_ = L_9_:CreateTab("Main", 13054639921)
L_10_:CreateSection("Auto Farm")
L_10_:CreateToggle({
	Name = "Auto Wins",
	CurrentValue = false,
	Flag = "AutoFarm",
	Callback = function(L_46_arg0)
	end,
})
task.spawn(function()
	while task.wait() do
		if L_6_.Flags.AutoFarm.CurrentValue then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(- 1435.95, - 116.248, 56.6882)
			wait(2)
		end
	end 
end)

L_10_:CreateSection("Shop")

L_10_:CreateToggle({
	Name = "Auto Buy Pickaxes",
	CurrentValue = false,
	Flag = "AutoBuy",
	Callback = function(L_47_arg0)
	end,
})
task.spawn(function()
	while task.wait() do
		if L_6_.Flags.AutoBuy.CurrentValue then
			for L_48_forvar0, L_49_forvar1 in ipairs(game:GetService("ReplicatedStorage").Pickaxes:GetChildren()) do
				game:GetService("ReplicatedStorage").Remotes.BuyPickaxe:FireServer(L_49_forvar1.Name)
			end
		end
	end 
end)

L_10_:CreateToggle({
	Name = "Auto Buy Trails",
	CurrentValue = false,
	Flag = "AutoBuyTrails",
	Callback = function(L_50_arg0)
	end,
})
task.spawn(function()
	while task.wait() do
		if L_6_.Flags.AutoBuyTrails.CurrentValue then
			for L_51_forvar0, L_52_forvar1 in ipairs(game:GetService("Lighting").Trails:GetChildren()) do
				game:GetService("ReplicatedStorage").Remotes.BuyTrail:FireServer(L_52_forvar1.Name)
			end
		end
	end   
end)

L_10_:CreateSection("Auto Hatch / Strength")
_G.selectedPet = nil
local L_11_ = {
	["Common"] = {
		capsuleName = "Common",
		price = 5
	},
	["Uncommon"] = {
		capsuleName = "Uncommon",
		price = 10
	},
	["Rare"] = {
		capsuleName = "Rare",
		price = 50
	},
	["Legendary"] = {
		capsuleName = "Legendary",
		price = 200
	},
	["Jungle"] = {
		capsuleName = "Jungle",
		price = 500
	},
	["Lava"] = {
		capsuleName = "Lava",
		price = 1000
	},
	["Warrior"] = {
		capsuleName = "Warrior",
		price = 5000
	},
}
L_10_:CreateDropdown({
	Name = "Selected Pet",
	Options = {
		"Common (5 Win)",
		"Uncommon (10 Wins)",
		"Rare (50 Wins)",
		"Legendary (200 Wins)",
		"Jungle (500 Wins)",
		"Lava (1K Wins)",
		"Warrior (5K Wins)"
	},
	CurrentOption = "...",
	Callback = function(L_53_arg0)
		local L_54_ = L_11_[string.match(L_53_arg0, "(.-) %(")]
		if L_54_ then
			_G.selectedPet = L_54_.capsuleName
			local L_55_ = L_54_.price
			if L_55_ >= 1000 then
				L_55_ = string.format("%.1fK", L_55_ / 1000)
			end
			print("You have selected the " .. L_54_.capsuleName .. " pet for " .. L_55_ .. " coins.")
		end
	end
})
L_10_:CreateToggle({
	Name = "Auto Hatch",
	CurrentValue = false,
	Flag = "AutoHatch",
	Callback = function(L_56_arg0)
		_G.autoHatch = L_56_arg0
		autoHatch()
	end
})
function autoHatch()
	_G.selectedPet = _G.selectedPet
	while _G.autoHatch do
		wait(0.1)
		if _G.selectedPet then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Eggs[_G.selectedPet].UIanchor.CFrame + Vector3.new(0, 8, 0)
			game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(_G.selectedPet, "Single")
		end
	end
end
L_10_:CreateButton({
	Name = "Strength",
	Callback = function()
		local L_57_ = 9999999
		game:GetService("ReplicatedStorage").Remotes.Anvil:FireServer(L_57_)
	end,
})  
local L_12_ = L_9_:CreateTab("User", 12559105272)
L_12_:CreateSection("Player Config")
local L_13_ = game:GetService"UserInputService"
local L_14_ = game:GetService("UserInputService")
local L_15_ = game:GetService("RunService")
local L_16_ = game.Players.LocalPlayer
local L_17_ = L_16_.Character or L_16_.CharacterAdded:Wait()
local L_18_ = L_17_:WaitForChild("Humanoid")
local L_19_ = false
L_12_:CreateToggle({
	Name = "Infinite-Jump",
	CurrentValue = L_19_,
	Flag = "InfiJump",
	Callback = function(L_58_arg0)
		L_19_ = L_58_arg0;
	end
})
game:GetService("UserInputService").InputBegan:Connect(function(L_59_arg0, L_60_arg1)
	if not L_60_arg1 and L_59_arg0.KeyCode == Enum.KeyCode.Space and L_19_ then
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)
local L_20_ = false
local L_21_ = L_12_:CreateToggle({
	Name = "Basic Player Speed",
	CurrentValue = false,
	Flag = "",
	Callback = function(L_61_arg0)
		L_20_ = L_61_arg0;
	end
})
local L_22_ = game:GetService("Players").LocalPlayer
if getgenv().noclip and L_22_.Character:FindFirstChild("Humanoid") then
	L_22_.Character.Humanoid:ChangeState(10)
end  
local L_23_ = false
local function L_24_func(L_62_arg0)
	if L_62_arg0.UserInputType == Enum.UserInputType.Keyboard and L_62_arg0.KeyCode == Enum.KeyCode.W then
		L_23_ = true
	end
end
local function L_25_func(L_63_arg0)
	if L_63_arg0.UserInputType == Enum.UserInputType.Keyboard and L_63_arg0.KeyCode == Enum.KeyCode.W then
		L_23_ = false
	end  
end
task.spawn(function()
	while wait(0.005) do
		if L_20_ and L_23_ and L_22_.Character and L_22_.Character.HumanoidRootPart then
			L_22_.Character.HumanoidRootPart.CFrame = L_22_.Character.HumanoidRootPart.CFrame + L_22_.Character.HumanoidRootPart.CFrame.lookVector * 0.190
			L_22_.Character.HumanoidRootPart.CFrame = L_22_.Character.HumanoidRootPart.CFrame + L_22_.Character.HumanoidRootPart.CFrame.lookVector * 0.190
			L_22_.Character.HumanoidRootPart.CFrame = L_22_.Character.HumanoidRootPart.CFrame + L_22_.Character.HumanoidRootPart.CFrame.lookVector * 0.190
		end
	end
end)
local L_26_ = game:GetService("UserInputService")
L_26_.InputBegan:Connect(L_24_func)
L_26_.InputEnded:Connect(L_25_func)
L_12_:CreateSection("WalkSpeed / Gravity")
local L_27_ = false 
local function L_28_func(L_64_arg0)
	local L_65_ = game:GetService("Players")
	for L_66_forvar0, L_67_forvar1 in ipairs(L_65_:GetPlayers()) do
		local L_68_ = L_67_forvar1.Character and L_67_forvar1.Character:FindFirstChild("Humanoid")
		if L_68_ then
			L_68_.WalkSpeed = L_64_arg0
		end
	end
end
local function L_29_func(L_69_arg0)
	local L_70_ = game:GetService("Players")
	for L_71_forvar0, L_72_forvar1 in ipairs(L_70_:GetPlayers()) do
		local L_73_ = L_72_forvar1.Character and L_72_forvar1.Character:FindFirstChild("Humanoid")
		if L_73_ then
			L_73_.JumpPower = L_69_arg0
		end
	end
end
L_12_:CreateToggle({
	Name = "Walkspeed",
	CurrentValue = false,
	Flag = "WalkSpeed",
	Callback = function(L_74_arg0)
	end,
})
task.spawn(function()
	while task.wait() do
		if L_6_.Flags.WalkSpeed.CurrentValue then
			repeat
				task.wait()
				L_28_func(val or 50)
			until L_6_.Flags.WalkSpeed.CurrentValue == false
		else
			L_28_func(16)
		end
	end
end)
L_12_:CreateSlider({
	Name = "Walk Speed",
	Range = {
		16,
		100
	},
	Increment = 1,
	Suffix = "Walk",
	CurrentValue = 16,
	Callback = function(L_75_arg0)
		val = L_75_arg0
	end,
})
L_12_:CreateToggle({
	Name = "Jump Power",
	CurrentValue = false,
	Flag = "JumpPower",
	Callback = function(L_76_arg0)
	end,
})
task.spawn(function()
	while task.wait() do
		if L_6_.Flags.JumpPower.CurrentValue then
			repeat
				task.wait()
				L_29_func(jump or 50)
			until L_6_.Flags.JumpPower.CurrentValue == false
		else
			L_29_func(50)
		end
	end
end)
L_12_:CreateSlider({
	Name = "Jump",  
	Range = {
		50,
		200
	},
	Increment = 1,
	Suffix = "Jump",
	CurrentValue = 50,
	Callback = function(L_77_arg0)
		jump = L_77_arg0
	end,
})
local L_30_ = L_9_:CreateTab("Universe", 12558305562)
local L_31_ = L_30_:CreateSection("Universe")
L_30_:CreateToggle({
	Name = "Auto Rejoin",
	CurrentValue = false,
	Flag = "Universal-AutoRejoin",
	Callback = function(L_78_arg0)
		if L_78_arg0 then
			L_6_:Notify({
				Title = "Notification",
				Content = "You will auto rejoin if you are kicked or disconnected from the game",
				Duration = 5,
				Image = 3944670656,
			})
			repeat
				task.wait()
			until game.CoreGui:FindFirstChild('RobloxPromptGui')
			local L_79_, L_80_, L_81_ = game:GetService('Players').LocalPlayer, game.CoreGui.RobloxPromptGui.promptOverlay, game:GetService('TeleportService')
			L_80_.ChildAdded:connect(function(L_82_arg0)
				if L_82_arg0.Name == 'ErrorPrompt' then
					while true do
						L_81_:Teleport(game.PlaceId)
						task.wait(2)
					end
				end
			end)
		end
	end,
})
L_30_:CreateToggle({
	Name = "Auto ReExecute",
	CurrentValue = false,
	Flag = "Universal-AutoRe-Execute",
	Callback = function(L_83_arg0)
		if L_83_arg0 then
			local L_84_ = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
			if L_84_ then
				L_84_('loadstring(game:HttpGet("https://raw.githubusercontent.com/13B8B/NEXUS/main/loadstring"))()')
			end
		end
	end,
})
L_30_:CreateButton({
	Name = "Rejoin-Server",
	Callback = function()
		game:GetService("TeleportService"):Teleport(game.PlaceId, L_16_)
	end,
})
L_30_:CreateButton({
	Name = "Server-Hop",
	Callback = function()
		local L_85_ = game:GetService("HttpService")
		local L_86_ = game:GetService("TeleportService")
		local L_87_ = "https://games.roblox.com/v1/games/"
		local L_88_, L_89_ = game.PlaceId, game.JobId
		local L_90_ = L_87_ .. L_88_ .. "/servers/Public?sortOrder=Desc&limit=100"
		local function L_91_func(L_93_arg0)
			local L_94_ = game:HttpGet(L_90_ .. ((L_93_arg0 and "&cursor=" .. L_93_arg0) or ""))
			return L_85_:JSONDecode(L_94_)
		end
		local L_92_;
		repeat
			local L_95_ = L_91_func(L_92_)
			for L_96_forvar0, L_97_forvar1 in next, L_95_.data do
				if L_97_forvar1.playing < L_97_forvar1.maxPlayers and L_97_forvar1.id ~= L_89_ then
					local L_98_, L_99_ = pcall(L_86_.TeleportToPlaceInstance, L_86_, L_88_, L_97_forvar1.id, L_16_)
					if L_98_ then
						break
					end
				end
			end
			L_92_ = L_95_.nextPageCursor
		until not L_92_
	end,
})
L_30_:CreateSection("Detector")
local L_32_ = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Creator.CreatorTargetId
L_30_:CreateToggle({
	Name = "Moderator Detector",
	CurrentValue = false,
	Flag = "Universal-AutoLeave",
	Callback = function(L_100_arg0)
		if L_100_arg0 then
			for L_101_forvar0, L_102_forvar1 in pairs(game.Players:GetPlayers()) do
				pcall(function()
					if L_102_forvar1:IsInGroup(L_32_) and L_102_forvar1:GetRankInGroup(L_32_) > 1 then
						AutoRejoin:Set(false)
						L_16_:Kick("Detected Staff")
					end
				end)
			end
		end
	end,
})
game:GetService("Players").PlayerAdded:Connect(function(L_103_arg0)
	if L_6_.Flags["Universal-AutoLeave"].CurrentValue then
		pcall(function()
			if L_103_arg0:IsInGroup(L_32_) and L_103_arg0:GetRankInGroup(L_32_) > 1 then
				AutoRejoin:Set(false)
				L_16_:Kick("Detected Staff")
			end
		end)
	end  
end)
L_6_:LoadConfiguration()
